@namespace Blazor.Sonner.Docs.Client.Components
@inject ToastService Toast

<section>
    <h2>Types</h2>
    <p>You can customize the type of toast you want to render, and pass an options object as the second argument.</p>
    <div class="flex flex-wrap gap-2">
        @foreach( var type in _types )
        {
            <Button IsActive="@(_activeType?.Name == type.Name)"
                    OnClick="@(() => HandleClick( type ))">
                @type.Name
            </Button>
        }
    </div>
    <CodeBlock Code="@_activeType?.Snippet" />
</section>

@code {
    private TypeDescriptor[] _types = default!;
    private TypeDescriptor? _activeType;

    protected override void OnInitialized()
    {
        _types = new TypeDescriptor[]
        {
            new("Default", "default", () => Toast.Show( "Event has been created" )),
            new("Description", "description", () => Toast.Show( "Event has been created", new() { Description = "Monday, January 3rd at 6:00pm" } )),
            new("Success", "success", () => Toast.Success( "Event has been created" )),
            new("Info", "info", () => Toast.Info( "Be at the area 10 minutes before the event time" )),
            new("Warning", "warning", () => Toast.Warning( "Event start time cannot be earlier than 8am" )),
            new("Error", "error", () => Toast.Error( "Event has not been created" )),
        };

        _activeType = _types[0];
    }

    private void HandleClick( TypeDescriptor descriptor )
    {
        descriptor.Action();
        _activeType = descriptor;
    }

    private record TypeDescriptor( string Name, string Snippet, Action Action );
}
